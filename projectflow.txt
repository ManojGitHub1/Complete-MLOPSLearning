type linting in python
def train_model(X_train: np.ndarray, y_train: np.ndarray, params: dict) -> RandomForestClassifier:
    return clf
X_train of type np.ndarray
params of type dictionary
and return of type classifier


Building Pipeline:
1. add experiments folder (general DS workflow)
2. add src folder along with all components/artifacts(run then individually)
3. add data, models, reports directories to .gitignore file
4. git commit-push

Setting up DVC pipeline (without params):
5. Create dvc.yaml file and add stages to it.
6. dvc init then do "dvc repro" to test the pipeline automation. (use/check "dvc dag" to check graph visually dag(directed acyclic graph))
7. now git add-commit-push

Setting up DVC pipeline (with params)
8. add params.yaml file
9. add params setup (mentioned below)
10. do "dvc repro" again to test the pipeline along with params
11. Now git add-commit-push









---------------------------------------------------------------------------

9. params setup
params.yaml setup
1. import yaml
2. add func:
def load_params(params_path: str) -> dict:
    ...
    ...
3. add to main():
# data_ingestion
params = load_params(params_path='params.yaml')
test_size = params['data_ingestion']['test_size']

# feature_engineering
params = load_params(params_path='params.yaml')
max_features = params['feature_engineering']['max_features']

# model_building
params = load_params('params.yaml')['model_building']

----------------------------------------------------------------------------